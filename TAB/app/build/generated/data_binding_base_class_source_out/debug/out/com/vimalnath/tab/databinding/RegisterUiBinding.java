// Generated by view binder compiler. Do not edit!
package com.vimalnath.tab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.vimalnath.tab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegisterUiBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText regEmail;

  @NonNull
  public final EditText regPassword;

  @NonNull
  public final MaterialButton registerbtn;

  @NonNull
  public final TextView registereduserbtn;

  @NonNull
  public final TextView signin;

  private RegisterUiBinding(@NonNull RelativeLayout rootView, @NonNull EditText regEmail,
      @NonNull EditText regPassword, @NonNull MaterialButton registerbtn,
      @NonNull TextView registereduserbtn, @NonNull TextView signin) {
    this.rootView = rootView;
    this.regEmail = regEmail;
    this.regPassword = regPassword;
    this.registerbtn = registerbtn;
    this.registereduserbtn = registereduserbtn;
    this.signin = signin;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegisterUiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegisterUiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.register_ui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegisterUiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.reg_email;
      EditText regEmail = ViewBindings.findChildViewById(rootView, id);
      if (regEmail == null) {
        break missingId;
      }

      id = R.id.reg_password;
      EditText regPassword = ViewBindings.findChildViewById(rootView, id);
      if (regPassword == null) {
        break missingId;
      }

      id = R.id.registerbtn;
      MaterialButton registerbtn = ViewBindings.findChildViewById(rootView, id);
      if (registerbtn == null) {
        break missingId;
      }

      id = R.id.registereduserbtn;
      TextView registereduserbtn = ViewBindings.findChildViewById(rootView, id);
      if (registereduserbtn == null) {
        break missingId;
      }

      id = R.id.signin;
      TextView signin = ViewBindings.findChildViewById(rootView, id);
      if (signin == null) {
        break missingId;
      }

      return new RegisterUiBinding((RelativeLayout) rootView, regEmail, regPassword, registerbtn,
          registereduserbtn, signin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
