// Generated by view binder compiler. Do not edit!
package com.vimalnath.tab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.vimalnath.tab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ForgotPasswordUiBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText forgotEmail;

  @NonNull
  public final TextView forgotText;

  @NonNull
  public final TextView forgotUrPass;

  @NonNull
  public final MaterialButton sendEmailBtn;

  private ForgotPasswordUiBinding(@NonNull RelativeLayout rootView, @NonNull EditText forgotEmail,
      @NonNull TextView forgotText, @NonNull TextView forgotUrPass,
      @NonNull MaterialButton sendEmailBtn) {
    this.rootView = rootView;
    this.forgotEmail = forgotEmail;
    this.forgotText = forgotText;
    this.forgotUrPass = forgotUrPass;
    this.sendEmailBtn = sendEmailBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ForgotPasswordUiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ForgotPasswordUiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.forgot_password_ui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ForgotPasswordUiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.forgot_email;
      EditText forgotEmail = ViewBindings.findChildViewById(rootView, id);
      if (forgotEmail == null) {
        break missingId;
      }

      id = R.id.forgot_text;
      TextView forgotText = ViewBindings.findChildViewById(rootView, id);
      if (forgotText == null) {
        break missingId;
      }

      id = R.id.forgot_ur_pass;
      TextView forgotUrPass = ViewBindings.findChildViewById(rootView, id);
      if (forgotUrPass == null) {
        break missingId;
      }

      id = R.id.send_emailBtn;
      MaterialButton sendEmailBtn = ViewBindings.findChildViewById(rootView, id);
      if (sendEmailBtn == null) {
        break missingId;
      }

      return new ForgotPasswordUiBinding((RelativeLayout) rootView, forgotEmail, forgotText,
          forgotUrPass, sendEmailBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
